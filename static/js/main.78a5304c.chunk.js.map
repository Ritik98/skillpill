{"version":3,"sources":["components/Header/Header.js","components/componentlink/componentlink.js","components/Home/Home.js","components/Aboutus/Aboutus.js","components/project/project.js","components/Works/Works.js","components/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","id","href","className","alt","src","NavbarToggler","onClick","Collapse","navbar","NavItem","NavLink","home","aboutus","works","contact","CardComponent","Card","body","inverse","CardTitle","title","CardText","content","Button","Home","this","Component","Aboutus","Project","i","technologies","length","push","back","class","head","problem","live","gitHub","history","Works","state","baseLines","progress","bind","baselines","setState","Contact","handleSubmit","values","console","log","JSON","stringify","alert","style","textAlign","Form","model","onSubmit","Row","Label","htmlFor","md","Col","Input","name","placeholder","type","size","offset","check","offest","area","rows","App","isHome","isAboutus","isWorks","isContact","current","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.78a5304c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './Header.css';\r\n\r\nimport { Navbar, NavbarBrand, NavbarToggler,  NavItem,NavLink, Collapse } from 'reactstrap';\r\nimport './Header.css';\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n  //const [activeTab, setActiveTab] = useState('1');\r\n\r\n  // const toggle = tab => {\r\n  //   if (activeTab !== tab) setActiveTab(tab);\r\n  // }\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleNav = () => setIsOpen(!isOpen);\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" light expand=\"md\">\r\n        <NavbarBrand id=\"brand\" href=\"/\"><img className=\"logo\" alt=\"\" src=\"./skillpill.png\" />SkillPill</NavbarBrand>\r\n        <NavbarToggler onClick={toggleNav} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <NavItem>\r\n            <NavLink id=\"nl\"  onClick = {props.home}>Home</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink id=\"nl\" onClick = {props.aboutus}>About Us</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink id=\"nl\" onClick = {props.works}>Works</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink id=\"nl\" onClick = {props.contact}>Contact</NavLink>\r\n          </NavItem>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\r\nimport './componentlink.css';\r\nconst CardComponent = (props) => {\r\n  return (\r\n    <div>\r\n      <Card body inverse id = 'cardcss'  >\r\n        <CardTitle className=\"body chead\" >{props.title}</CardTitle>\r\n        <CardText className=\"body\">{props.content}</CardText>\r\n        <Button onClick = {props.onClick} id = 'btncss' >Know More</Button>\r\n      </Card>\r\n      </div>\r\n    )\r\n  };\r\nexport default CardComponent;\r\n","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport CardComponent from '../componentlink/componentlink';\r\nexport default class Home extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n      <div id=\"home\">\r\n    <div id=\"photo\"><img src=\"./skillpill.png\" alt=\"\"/></div>\r\n    <div id=\"bIntro\">SkillPill is a name associated with a team of software developers who are always ready to take that pill(opportunity) of upgrading their skill.\r\n</div>\r\n  </div>\r\n    <CardComponent title = {\"About Us\"} content = {\"It all started on 17 June when our mentor Aashish Sir invited us to work on a program. While developing the solution we encountered a lot of problems and in the process of solving those problems we were continuously upgrading ourselves\"} onClick = {this.props.aboutus}/>\r\n    <CardComponent title = {\"Works\"} content = {\"SkillPill team is always working towards new ideas or solution which can help a group of people to accomplish certain tasks. In the process of continous development towards projects and learning continously in the process SkillPill team has developed some projects.\"} onClick = {this.props.works}/>\r\n\r\n    </div>)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Aboutus.css';\r\n\r\nfunction Aboutus(){\r\n    return(<div className = \"text1\">\r\n      <h1>ABOUT US</h1>\r\n\r\n<p>It all started on 17 June when our mentor Aashish Sir invited us to work on a program. While developing the solution we encountered a lot of problems and in the process of solving those problems we were continuously upgrading ourselves. We got exposure to multiple things and the guidance of Aashish sir always helped us to stick to the path as while exploring things there is a natural tendency of a person to deviate from his main objective. We were working in a team where we collaboratively worked supporting each other solving real problems. Although you can say we were developing a project but it was something special, something more than just a web application.</p>\r\n<ul>\r\n<div> So what was special about it:-</div>\r\n    <li>We were in continuous touch of our clients and were receiving feedbacks</li>\r\n    <li>We were not limited to person’s thinking or perspective of a project and the ideas of team and feedback our clients gave us a the opportunity to try various things during the execution and that phase was full of learning</li>\r\n    <li>We were working with the 23 years of experience of Aashish Sir who at any point was not limiting us to a certain perspective but allowed us to try various things and his guidance allowed us to maintain balance in production and research</li>\r\n    <li>We gave a live presentation online explaining our journey and project thus not only improving our communication skills but motivating and inspiring others from our approach in moving forwards</li>\r\n    <li>We were not working under the burden of developing things to improve our resume but working with an excitement of continuously developing things daily which even fascinates us when we look back</li>\r\n</ul>\r\n<p>At the same time we realize the importance of working on our basics as well i.e. developing our problem solving approach. So we worked on our core as well continuously by things like competitive programming which add another spice to our routine. Solving problems and encountering errors might be frustrating at times but the whole process was full of learning new things with an excitement of what’s next always there.</p>\r\n<ul>\r\n    <div>We were also analysing ourselves at regular intervals:-</div>\r\n    <li>We have daily sync up meetings where we discuss what we did each day and what we should focus on now. </li>\r\n    <li>This was something like looking in the mirror and realizing and learning from the previous work and using the information to apply it now so that it smoothes our future tasks.</li>\r\n    <li>We had a deep analysis of our work done every two week so that we can see how consistent we are and look back and see where we lacked and what went good etc.</li>\r\n</ul>\r\n    </div>)\r\n}\r\n\r\nexport default Aboutus;\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport './project.css';\r\n\r\nexport default class Project extends Component{\r\n    render(){\r\n        var technologies=[],i;\r\n        for(i=0;i<this.props.technologies.length;i++){\r\n            technologies.push(<li>{this.props.technologies[i]}</li>);\r\n        }\r\n        return(<div id=\"project\">\r\n        <div id=\"back\" onClick={this.props.back}>&larr;Back</div>\r\n        <div class=\"heading\">{this.props.head}</div>\r\n            <div><b className=\"head\">Problem:</b>{this.props.problem}</div>\r\n            <div>\r\n                <div className=\"head\"><b>Technologies Used:-</b></div>\r\n                <div className=\"fields\">\r\n                    <ul>{technologies}</ul>\r\n                </div>\r\n            </div>\r\n            <div><b className=\"head\"><a href={this.props.live}>Live Demo</a>&nbsp;<a href={this.props.gitHub}>View on GitHub</a></b></div>\r\n            <div>\r\n                <div className=\"head\"><b>History</b></div>\r\n                <div className=\"fields\">{this.props.history}</div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Project from '../project/project';\r\nimport './Works.css';\r\n\r\nclass Works extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            home:true,\r\n            baseLines:false,\r\n            progress:false\r\n        }\r\n        this.home = this.home.bind(this);\r\n        this.baselines = this.baselines.bind(this);\r\n        this.progress = this.progress.bind(this);\r\n    }\r\n    home(){\r\n        this.setState({\r\n            home:true,\r\n            baseLines:false,\r\n            progress:false\r\n        });\r\n    }\r\n    baselines(){\r\n        this.setState({\r\n            home:false,\r\n            baseLines:true,\r\n            progress:false\r\n        });\r\n    }\r\n    progress(){\r\n        this.setState({\r\n            home:false,\r\n            baseLines:false,\r\n            progress:true\r\n        });\r\n    }\r\n    render() {\r\n        if(this.state.home)\r\n        return (<div id=\"Work\">\r\n            <h1>Works</h1>\r\n            <div className=\"content\">SkillPill team is always working towards new ideas or solution which can help a group of people to accomplish certain tasks. In the process of continous development towards projects and learning continously in the process SkillPill team has developed some projects. Here are the competencies earned by them during the process and to support their competencies their projects are also shown. You can view their progress here.</div>\r\n            <h2 className=\"comp\">Competencies Earned:-</h2>\r\n            <ul>\r\n                <li>HTML,CSS & JS</li>\r\n                <li>React</li>\r\n                <li>AWS</li>\r\n                <li>AWS CLI</li>\r\n                <li>Java</li>\r\n                <li>Python</li>\r\n                <li>Google App Script</li>\r\n                <li>Web Crawling</li>\r\n                <li>Automated Testing in React</li>\r\n                <li>Clean Coding</li>\r\n                <li>GitHub</li>\r\n                <li>Bootstrap</li>\r\n                <li>Rest APIs</li>\r\n                <li>JSON</li>\r\n            </ul>\r\n            <h2 className=\"comp\">Projects:-</h2>\r\n            <ul>\r\n                <li onClick={this.baselines}>BaseLines</li>\r\n                <li onClick={this.progress}>Progress Tracker</li>\r\n                <li>This Website</li>\r\n            </ul>\r\n        </div>)\r\n        else if(this.state.baseLines)\r\n        return (<Project head=\"BaseLines\" problem=\"To develop a user friendly interface to select 6 top qualities\" technologies={[\"HTML\",\"CSS\",\"JavaScript\",\"React\",\"AWS\",\"Bootstrap\",\"Reactstrap\"]} live=\"#\" gitHub=\"#\" history={<div><p>This is the first project of SkillPill through which our journey started. It was developed for a newly formed company called wings2life whose aim is to unlock someone’s true potential. For that they require to build a web application which enables users to select 6 qualities from around 350 qualities. But choosing 6 from 350 is way too hectic job so we divided it into stages where at first stage you can select as many qualities you want(minimum 24) which is reduced to 24 exactly and then reduced to 6. At first we developed this with basic HTML, CSS and JS. We just knew a bit of HTML and CSS before starting the project so we were continuously learning to develop the web application.</p>\r\n            <p>After developing basic requirements we had a meeting with our clients explaining the project. After getting feedback on the product we realised to fulfill their requirement we need to revamp the interface.</p>\r\n            <p>So we developed a new interface to fulfill their requirements we show it the clients and they were satisfied with the product</p>\r\n            <p>But to get our hands dirty on various technologies we developed our interface with react as well which was full of learning as we were getting problems every 5 minutes in the beginning. Though we initially felt that react don’t reduces our work and is making things more complicated but while developing our interface with react we realized the benefits and importance of React</p>\r\n            <p>We also used AWS to get our data from the backend in the form of APIs. THis was again very difficult initially as we’ve never even heard about AWS before.</p></div>} back={this.home}/>);\r\n        else if(this.state.progress)\r\n        return (<Project head=\"Progress Tracker\" problem=\"To develop an interface to help user being consistent and discipline towards work\" technologies={[\"React\",\"Css\",\"Aws\"]} live=\"#\" gitHub=\"#\" history={<div><p>As we were on our first project , we had an excel spreadsheet where we used to put our record of our day ,i.e, How many slots we gave to a particular task and what were our  achievements , learning   and challenges, which really helped us analyzing ourselves</p>\r\n            <p>So our mentor suggested why don't we make an app or website so that other students take advantage of something like this .</p>\r\n            <p>After 2-3 weeks, we made an user friendly interface which basically shows daily progress,consistency and past record of a person.</p>\r\n            </div>} back={this.home}/>);\r\n        else\r\n        return(<div></div>);\r\n    }\r\n\r\n}\r\n\r\nexport default Works;\r\n","import React, { Component } from 'react';\r\nimport { Button, Label, Col, Row ,Input, Form} from 'reactstrap';\r\nimport './Contact.css';\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 \" style={{textAlign:'left'}}>\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                    placeholder=\"First Name\" \r\n                                    className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                    placeholder=\"Last Name\" className=\"form-control\"/>\r\n                                    \r\n                                </Col>\r\n        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                    placeholder=\"Tel. Number\" className=\"form-control\"/>     \r\n                                                       \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" model=\".email\" id=\"email\" name=\"email\" \r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"/>\r\n                                    \r\n                                </Col>                                \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}> \r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                \r\n                                <Col md={{size:4 , offest: 1}}>\r\n                                    <Input type=\"select\" model=\"select\" name=\"contactType\"\r\n                                     className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>    \r\n                                    </Input>\r\n                                </Col> \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Query</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\"area model=\".message\" id=\"message\" name=\"message\" \r\n                                    rows=\"12\" className=\"from-control col-12\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Query\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport Home from './components/Home/Home';\r\nimport Aboutus from './components/Aboutus/Aboutus';\r\nimport Works from './components/Works/Works';\r\nimport Contact from './components/Contact/Contact';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isHome: true,\r\n      isAboutus: false,\r\n      isWorks: false,\r\n      isContact: false\r\n    };\r\n    this.home = this.home.bind(this);\r\n    this.aboutus = this.aboutus.bind(this);\r\n    this.works = this.works.bind(this);\r\n    this.contact = this.contact.bind(this);\r\n  }\r\n\r\n  home() {\r\n    this.setState({\r\n      isHome: true,\r\n      isAboutus: false,\r\n      isWorks: false,\r\n      isContact: false\r\n    });\r\n  }\r\n  aboutus(){\r\n    this.setState({\r\n      isHome: false,\r\n      isAboutus: true,\r\n      isWorks: false,\r\n      isContact: false\r\n      });\r\n    }\r\n    works(){\r\n      this.setState({\r\n        isHome: false,\r\n        isAboutus: false,\r\n        isWorks: true,\r\n        isContact: false\r\n      });\r\n    }\r\n    contact(){\r\n      this.setState({\r\n          isHome: false,\r\n          isAboutus: false,\r\n          isWorks: false,\r\n          isContact: true\r\n      });\r\n    }\r\n\r\n    render(){\r\n      var current;\r\n      if (this.state.isHome)\r\n        current = <Home aboutus={this.aboutus} works={this.works} />;\r\n      else if (this.state.isAboutus)\r\n        current = <Aboutus />;\r\n      else if (this.state.isWorks)\r\n        current = <Works />;\r\n      else if (this.state.isContact)\r\n        current = <Contact />;\r\n\r\n      return(\r\n        <div className=\"App\" >\r\n\r\n          <Header home={this.home} aboutus={this.aboutus} works={this.works} contact={this.contact} />\r\n          {current}\r\n\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n      export default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <App />\r\n   </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}